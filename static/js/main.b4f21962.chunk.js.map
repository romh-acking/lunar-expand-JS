{"version":3,"sources":["context/theme/reducer.js","context/theme/context.js","_layout.js","context/snackbar/snackbar.js","context/snackbar/configureStore.js","lib/romType.js","lib/expansionOption.js","components/aboutModal.jsx","lib/autodetect.js","lib/expand.js","pages/mainPage.js","components/snackbar.jsx","app.js","index.js"],"names":["themeReducer","state","type","switched","theme","Error","createContext","require","initializer","localStorage","getItem","JSON","parse","ThemeStateContext","ThemeDispatchContext","useThemeState","useContext","ThemeProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","light","palette","dark","primary","main","Layout","lightTheme","createMuiTheme","darkTheme","CssBaseline","Container","maxWidth","Box","marginTop","SET_SNACKBAR","initialState","snackbarOpen","snackbarType","snackbarMessage","defaultFunc","action","setSnackbar","reducer","combineReducers","snackbar","snackbarReducer","store","createStore","romType","expansionOption","AppendZeros","Mirror","AlertDialog","React","useState","open","setOpen","handleClose","Button","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","style","textAlign","DialogActions","autoFocus","Position","romData","ReadUInt16","length","subslice","Uint8Array","slice","uint","ReadByte","retVal","sizeIds","size","id","mapMode","expand","oldRomData","currentRomType","settings","newRomData","arr","newSize","defaultValue","error","location","newByte","currentMapType","isExtended","correctMapTypeInHeader","writeLocation","found","i","correctSizeInHeader","Int8Array","Array","Math","max","fill","copyWithin","pc","FirstHalfLocation","useStyles","makeStyles","formControl","minWidth","paper","padding","spacing","margin","img","width","divider","marginBottom","romExpansionOptions","additionalLabel","Users","classes","dispatchTheme","useDispatch","identifiedRomType","setIdentifiedRomType","rom","setRom","romFilename","setRomFilename","radioButtonSelected","setRadioButtonSelected","formatBytes","bytes","decimals","k","dm","sizes","floor","log","parseFloat","pow","toFixed","Paper","className","Grid","container","justify","alignItems","item","Typography","gutterBottom","variant","htmlFor","display","name","accept","onChange","event","file","target","files","reader","FileReader","onload","buffer","result","data","romData_","ptr","autodetect","undefined","readAsArrayBuffer","color","component","IconButton","xs","TableContainer","Table","aria-label","TableBody","TableRow","TableCell","scope","align","map","ShuffleIfLoROM","md","Tooltip","title","placement","FormControlLabel","control","Radio","checked","e","label","entry","replace","direction","disabled","filenameWithoutExt","filenameExt","reportName","byte","a","window","document","createElement","href","URL","createObjectURL","Blob","download","body","appendChild","click","removeChild","saveByteArray","root","CustomizedSnackbars","useSelector","reason","Snackbar","autoHideDuration","Alert","elevation","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4f21962.chunk.js","sourcesContent":["export const themeReducer = (state, { type }) => {\n  switch (type) {\n    case \"TOGGLE_THEME\":\n      return {\n        ...state,\n        switched: state.switched + 1,\n        theme: state.theme === \"light\" ? \"dark\" : \"light\",\n      };\n    default:\n      throw new Error(`Unhandled action type: ${type}`);\n  }\n};\n","import React, { useContext, useEffect, useReducer } from \"react\";\n\nimport { themeReducer } from \"./reducer\";\n\nconst { createContext } = require(\"react\");\n\nconst initialState = {\n  switched: 0,\n  theme: \"dark\",\n};\n\nconst initializer = localStorage.getItem(\"theme\")\n  ? JSON.parse(localStorage.getItem(\"theme\"))\n  : initialState;\n\nconst ThemeStateContext = createContext();\nconst ThemeDispatchContext = createContext();\n\nexport const useThemeState = () => useContext(ThemeStateContext);\nexport const useThemeDispatch = () => useContext(ThemeDispatchContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, dispatch] = useReducer(themeReducer, initializer);\n\n  // Persist state on each update\n  useEffect(() => {\n    localStorage.setItem(\"theme\", JSON.stringify(theme));\n  }, [theme]);\n\n  return (\n    <ThemeStateContext.Provider value={theme}>\n      <ThemeDispatchContext.Provider value={dispatch}>\n        {children}\n      </ThemeDispatchContext.Provider>\n    </ThemeStateContext.Provider>\n  );\n};\n","import {\n  Box,\n  Container,\n  CssBaseline,\n  ThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core\";\n\nimport React from \"react\";\nimport { useThemeState } from \"./context/theme\";\n\nexport const light = {\n  palette: {\n    type: \"light\",\n  }\n};\n\nexport const dark = {\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: '#7289da'\n    }\n  }\n};\n\nexport default function Layout({ children }) {\n  const { theme } = useThemeState();\n\n  const lightTheme = createMuiTheme(light);\n  const darkTheme = createMuiTheme(dark);\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Box marginTop={2}>{children}</Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","const SET_SNACKBAR = \"SET_SNACKBAR\";\r\n\r\nconst initialState = {\r\n  snackbarOpen: false,\r\n  snackbarType: \"success\",\r\n  snackbarMessage: \"\"\r\n};\r\n\r\nconst defaultFunc = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SNACKBAR:\r\n      const { snackbarOpen, snackbarMessage, snackbarType } = action;\r\n      return {\r\n        ...state,\r\n        snackbarOpen,\r\n        snackbarType,\r\n        snackbarMessage\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default defaultFunc;\r\n\r\nexport const setSnackbar = (\r\n  snackbarOpen,\r\n  snackbarType = \"success\",\r\n  snackbarMessage = \"\"\r\n) => ({\r\n  type: SET_SNACKBAR,\r\n  snackbarOpen,\r\n  snackbarType,\r\n  snackbarMessage\r\n});\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport snackbarReducer from \"./snackbar\";\r\n\r\nconst reducer = combineReducers({\r\n  snackbar: snackbarReducer\r\n});\r\n\r\nconst store = createStore(reducer, {});\r\n\r\nexport default store;\r\n","export const romType = {\n    LoROM1: 'LoROM1',\n    LoROM2: 'LoROM2',\n    HiROM: 'HiROM',\n    ExLoROM: 'ExLoROM',\n    ExHiROM: 'ExHiROM',\n    RAM: 'RAM',\n    VRAM: 'VRAM',\n    Invalid: 'Invalid'\n  };","export const expansionOption = {\n    AppendZeros: 'AppendZeros',\n    Mirror: 'Mirror'\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>\n        About\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle>{\"About\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText style={{ textAlign: 'center' }}>\n            This program is not endorsed or supported by Nintendo, and the author is not affiliated with any other corporate entity.<br />\n            The program is freeware and provided \"AS IS\"...<br />\n            The author cannot be held liable for damages of any kind arising from its use or presence.<br /><br />\n            JavaScript Port Based on this Version:<br />\n            Version 1.14<br />\n            Public Build --- May 22 2010<br /><br />\n            Originally By: FuSoYa<br />\n            Ported By: FCandChill\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { romType } from \"./romType\"\n\nlet Position = 0;\nlet romData = null\n\nexport function autodetect(romData_) {\n    let identifiedRomType;\n    let ptr = 0;\n\n    romData = romData_;\n\n    if (romData.length < 0x10000) {\n        identifiedRomType = romType.Invalid;\n        return { romType: identifiedRomType, error: \"Rom too small\" };\n    }\n\n    Position = 0x7FDC;\n\n    // Essentially checks if a rom is headered.\n    if (romData_.length % 0x010000 !== 0) {\n        identifiedRomType = romType.Invalid;\n        return { romType: identifiedRomType, error: \"Rom is not a proper size.\" };\n    }\n\n    if ((ReadUInt16() ^ ReadUInt16()) === 0xFFFF) {\n        Position = 0x7FD5;\n        ptr = ReadByte();\n    }\n    else {\n        Position = 0xFFDC;\n\n        if ((ReadUInt16() ^ ReadUInt16()) !== 0xFFFF) {\n            identifiedRomType = romType.Invalid;\n            return { romType: identifiedRomType, error: \"File is not a SNES rom\" };\n        }\n        Position = 0xFFD5;\n        ptr = ReadByte();\n    }\n\n    if ((ptr & 0xF) === 5) {\n        identifiedRomType = romType.ExHiROM;\n    }\n    else if ((ptr & 0xF) === 3) {\n        identifiedRomType = romType.HiROM;\n    }\n    else if ((ptr & 1) === 1) {\n        if (romData.length <= 0x400000) {\n            identifiedRomType = romType.HiROM;\n        }\n        else {\n            identifiedRomType = romType.ExHiROM;\n        }\n    }\n    else if (romData.length <= 0x400000) {\n        identifiedRomType = (ptr >> 4) >= 3 ? romType.LoROM2 : romType.LoROM1;\n    }\n    else {\n        identifiedRomType = romType.ExLoROM;\n    }\n    return { romType: identifiedRomType, error: \"\" };\n}\n\nfunction ReadUInt16() {\n    const size = 2;\n\n    if (Position + size > romData.length) {\n        throw new Error(\"Location outside bounds of rom\");\n    }\n\n    let subslice = new Uint8Array(romData.slice(Position, Position + size));\n    let uint = (subslice[0] << 8) + subslice[1];\n    Position += size;\n\n    return uint;\n}\n\nfunction ReadByte() {\n    const size = 1;\n\n    if (Position + size > romData.length) {\n        throw new Error(\"Location outside bounds of rom\");\n    }\n    let retVal = new Uint8Array(romData.slice(Position, Position + size))[0];\n    Position += size;\n\n    return retVal;\n}","import { romType } from \"./romType\"\nimport { expansionOption } from \"./expansionOption\"\n\n//https://snesdev.mesen.ca/wiki/index.php?title=Internal_ROM_Header#ROM_Size\nexport const sizeIds = [\n    { size: 0x010000, id: 0x07 }, //<= 1MBit (Guessed)\n    { size: 0x020000, id: 0x08 }, //<= 2MBit (Guessed)\n    { size: 0x040000, id: 0x09 }, //<= 4MBit\n    { size: 0x080000, id: 0x0a }, //<= 8MBit\n    { size: 0x100000, id: 0x0b }, //<= 16Mbit\n    { size: 0x200000, id: 0x0c }, //<= 32MBit\n    { size: 0x400000, id: 0x0d }  //<= 64MBit\n];\n\n// https://problemkaputt.de/fullsnes.htm#snescartridgeromheader\n/*\n  Bit7-6 Always 0\n  Bit5   Always 1 (maybe meant to be MSB of bit4, for \"2\" and \"3\" MHz)\n  Bit4   Speed (0=Slow, 1=Fast)              (Slow 200ns, Fast 120ns)\n  Bit3-0 Map Mode\n\nMap Mode can be:\n\n  0=LoROM/32K Banks             Mode 20 (LoROM)\n  1=HiROM/64K Banks             Mode 21 (HiROM)\n  2=LoROM/32K Banks + S-DD1     Mode 22 (mappable) \"Super MMC\"\n  3=LoROM/32K Banks + SA-1      Mode 23 (mappable) \"Emulates Super MMC\"\n  5=HiROM/64K Banks             Mode 25 (ExHiROM)\n  A=HiROM/64K Banks + SPC7110   Mode 25? (mappable)\n\n*/\nconst mapMode = {\n    LoROM: 0x00,\n    HiROM: 0x01,\n    LoROMSDD1: 0x02,\n    LoROMSA1: 0x03,\n    ExHiROM: 0x05,\n    ExHiROMSPC7110: 0xa\n};\n\nexport function expand(oldRomData, currentRomType, settings) {\n    let error = \"\";\n    let newRomData;\n    if (settings.size > oldRomData.length) {\n        // Resize the rom now\n        newRomData = resize(oldRomData, settings.size, 0x00);\n\n        // Adjust the SNES header \n        newRomData = correctSizeInHeader(newRomData, currentRomType);\n        newRomData = correctMapTypeInHeader(newRomData, currentRomType, settings);\n\n        /*\n        There's two modes when expanding:\n        1) Simply appending zeros\n        2) Append zeros and mirror the old rom.\n\n        Lunar address provides the latter as a last resort method when the first fails.\n        */\n        switch (settings.expansionOption) {\n            case expansionOption.AppendZeros:\n                if (settings.isExtended) {\n                    switch (currentRomType) {\n                        case romType.LoROM1:\n                            // Move rom data to new space\n                            newRomData = newRomData.copyWithin(0x400000, 0x000000, 0x400000);\n                            // And blank out the old space\n                            newRomData = newRomData.fill(0x00, 0x8000, 0x400000);\n                            break;\n                        case romType.LoROM2:\n                            // Copy header to new region. That's it.\n                            newRomData = newRomData.copyWithin(0x400000, 0x000000, 0x8000);\n                            break;\n                        case romType.ExLoROM:\n                            break;\n                        case romType.HiROM:\n                            // Copy header to new region. That's it.\n                            newRomData = newRomData.copyWithin(0x408000, 0x008000, 0x10000);\n                            break;\n                        case romType.ExHiROM:\n                            break;\n                        default:\n                            throw new Error(\"Invalid rom type\");\n                    }\n                }\n                break;\n            case expansionOption.Mirror:\n                if (settings.isExtended) {\n                    if (currentRomType === romType.HiROM || currentRomType === romType.ExHiROM) {\n                        // Copying what Lunar Expand does. Not sure why it's like this.\n                        let pc = 0x408000;\n                        while (pc < newRomData.length) {\n                            let FirstHalfLocation = pc - 0x400000;\n                            newRomData = newRomData.copyWithin(pc, FirstHalfLocation, FirstHalfLocation + 0x8000);\n                            pc += 0x10000;\n                        }\n                    } else if (currentRomType === romType.LoROM1 || currentRomType === romType.LoROM2 || currentRomType === romType.ExLoROM) {\n                        newRomData = newRomData.copyWithin(0x400000, 0x000000, 0x400000);\n                    } else {\n                        throw new Error(\"Invalid rom type\");\n                    }\n                } else {\n                    throw new Error(\"Can't mirror when not extended.\");\n                }\n\n                break;\n            default:\n                error = new Error(\"Invalid expansion option\");\n        }\n    } else {\n        error = \"Selected size to expand to is smaller than the current rom size\"\n    }\n\n    return { romData: newRomData, error: error };\n}\n\n// A simple array resize function\n// https://stackoverflow.com/questions/32054170/how-to-resize-an-array\nfunction resize(arr, newSize, defaultValue) {\n    return new Int8Array([...arr, ...Array(Math.max(newSize - arr.length, 0)).fill(defaultValue)]);\n}\n\n// correctHeader changes the header's size value to reflect the size change.\nfunction correctSizeInHeader(romData, currentRomType) {\n    let writeLocation;\n    switch (currentRomType) {\n        case romType.LoROM1:\n        case romType.LoROM2:\n        case romType.ExLoROM:\n            writeLocation = 0x7FD7;\n            break;\n        case romType.HiROM:\n        case romType.ExHiROM:\n            writeLocation = 0xFFD7;\n            break;\n        default:\n            throw new Error(\"Invalid rom type\");\n    }\n\n    let found = false;\n    for (let i = sizeIds.length - 1; i >= 0; i--) {\n        // The header size field operates on a range, so \n        // we check if it's within a certain range with \"sizeIds\".\n        if (romData.length > sizeIds[i].size) {\n            romData[writeLocation] = sizeIds[i].id;\n            found = true;\n            break;\n        }\n    }\n\n    if (!found) {\n        throw new Error(\"Invalid size\");\n    }\n\n    return romData;\n}\n\n// correctMapType changes the header to indicate we expanded it.\n// It's only really used to indicate we expanded from HiROM to ExHiROM.\nfunction correctMapTypeInHeader(romData, currentRomType, settings) {\n    let location;\n\n    // The header location differs between HiROM and LoROM.\n    switch (currentRomType) {\n        case romType.LoROM1:\n        case romType.LoROM2:\n        case romType.ExLoROM:\n            location = 0x7FD5;\n            break;\n        case romType.HiROM:\n        case romType.ExHiROM:\n            location = 0xFFD5;\n            break;\n        default:\n            throw new Error(\"Invalid rom type\");\n    }\n\n    // Copy over the bits that we won't be changing\n    let newByte = romData[location] & 0xF0;\n\n    // Get map type of the original rom\n    let currentMapType = romData[location] & 0x0F;\n\n    /*\n    Change the header to reflect we expanded it. \n    Otherwise, keep the map type the same.\n    */\n    switch (currentMapType) {\n        case mapMode.HiROM:\n            if (settings.isExtended) {\n                newByte |= mapMode.ExHiROM;\n            } else {\n                newByte |= mapMode.HiROM;\n            }\n            break;\n        default:\n            // Change nothing as I don't know how to check \n            // for special chips.\n            newByte |= currentMapType;\n\n    }\n\n    romData[location] = newByte;\n\n    return romData;\n}","import { Button, Grid, Paper, Typography, makeStyles, Container, } from \"@material-ui/core\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport React from 'react';\nimport { useThemeDispatch } from \"../context/theme/context\";\nimport { useThemeState } from \"../context/theme\";\nimport IconButton from '@material-ui/core/IconButton';\nimport { useDispatch } from \"react-redux\";\nimport { setSnackbar } from \"../context/snackbar/snackbar\";\nimport { romType } from \"../lib/romType\"\nimport { expansionOption } from \"../lib/expansionOption\"\n\nimport AlertDialog from \"../components/aboutModal\"\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { autodetect } from \"../lib/autodetect\"\nimport { expand } from \"../lib/expand\"\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  paper: {\n    padding: theme.spacing(4),\n    margin: \"auto\",\n  },\n  img: {\n    width: \"100%\",\n  },\n  divider: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst romExpansionOptions = [\n  { size: 0x020000, expansionOption: expansionOption.AppendZeros },\n  { size: 0x040000, expansionOption: expansionOption.AppendZeros },\n  { size: 0x080000, expansionOption: expansionOption.AppendZeros },\n  { size: 0x100000, expansionOption: expansionOption.AppendZeros },\n  { size: 0x180000, expansionOption: expansionOption.AppendZeros },\n  { size: 0x200000, expansionOption: expansionOption.AppendZeros },\n  { size: 0x280000, expansionOption: expansionOption.AppendZeros },\n  { size: 0x300000, expansionOption: expansionOption.AppendZeros },\n  { size: 0x380000, expansionOption: expansionOption.AppendZeros },\n  { size: 0x400000, expansionOption: expansionOption.AppendZeros },\n\n  { size: 0x600000, isExtended: true, expansionOption: expansionOption.AppendZeros, additionalLabel: \"(Normal) \" },\n  { size: 0x600000, isExtended: true, expansionOption: expansionOption.Mirror, additionalLabel: \"(Mirror) \" },\n\n  { size: 0x800000, isExtended: true, expansionOption: expansionOption.AppendZeros, additionalLabel: \"(Normal) \" },\n  { size: 0x800000, isExtended: true, expansionOption: expansionOption.Mirror, additionalLabel: \"(Mirror) \" }\n];\n\nexport default function Users() {\n  const classes = useStyles();\n  const { theme } = useThemeState();\n  const dispatchTheme = useThemeDispatch();\n  const _toggleTheme = () => dispatchTheme({ type: \"TOGGLE_THEME\" });\n  const dispatch = useDispatch();\n\n  const [identifiedRomType, setIdentifiedRomType] = React.useState();\n  const [rom, setRom] = React.useState();\n  const [romFilename, setRomFilename] = React.useState();\n\n  const changeHandlerAutoDetect = (event) => {\n    let file = event.target.files[0];\n\n    const reader = new FileReader()\n\n    reader.onload = event => {\n      const buffer = reader.result;\n      const data = new Int8Array(buffer);\n\n      let retVal = autodetect(data);\n\n      if (retVal.romType !== romType.Invalid) {\n        setRom(data);\n        setIdentifiedRomType(retVal.romType);\n        setRomFilename(file.name);\n        setRadioButtonSelected(\"\");\n\n        dispatch(\n          setSnackbar(\n            true,\n            \"success\",\n            `ROM memory map type indentified as: ${retVal.romType}`\n          )\n        )\n      } else {\n        setIdentifiedRomType(null);\n        setRomFilename(null);\n        setRom(null);\n        dispatch(\n          setSnackbar(\n            true,\n            \"error\",\n            `Cannot determine ROM memory map type. ${retVal.error}.`\n          )\n        )\n      }\n    }\n\n    if (file !== undefined) {\n      reader.readAsArrayBuffer(file);\n    }\n  };\n\n  const [radioButtonSelected, setRadioButtonSelected] = React.useState('');\n\n  // saveByteArray saves the rom as a file\n  function saveByteArray(reportName, byte) {\n    let a = window.document.createElement('a');\n\n    a.href = window.URL.createObjectURL(new Blob([byte], { type: 'application/octet-stream' }));\n    a.download = reportName;\n\n    // Append anchor to body.\n    document.body.appendChild(a)\n    a.click();\n\n    // Remove anchor from body\n    document.body.removeChild(a)\n  };\n\n  function handleClickExpand(event) {\n    let retVal = expand(rom, identifiedRomType, romExpansionOptions[radioButtonSelected]);\n\n    if (retVal.error === \"\") {\n      let filenameWithoutExt = romFilename.replace(/[.][^.]+$/, \"\");\n      let filenameExt = romFilename.replace(/.*\\./, \"\");\n      let newFilename = `${filenameWithoutExt}(Expand).${filenameExt}`;\n\n      let byteArray = retVal.romData;\n\n      saveByteArray(newFilename, byteArray)\n    } else {\n      dispatch(\n        setSnackbar(\n          true,\n          \"error\",\n          `Error ${retVal.error}.`\n        )\n      )\n    }\n  }\n\n  function createLabel(entry) {\n    return `${entry.size / 0x020000} Mbit ${(entry.isExtended === true) ? `Ex${identifiedRomType.replace(/[0-9]/g, '').replace(\"Ex\", '')} ${(entry.additionalLabel !== undefined) ? entry.additionalLabel : \"\"}` : \"\"}(${formatBytes(entry.size)})`;\n  }\n\n  function formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  return (\n    <>\n      <Paper className={classes.paper}>\n        <Grid container justify=\"space-between\" alignItems=\"flex-start\">\n          <Grid item>\n            <Typography gutterBottom variant=\"h4\">\n              Lunar Expand JS\n            </Typography>\n          </Grid>\n\n          <Grid item>\n            <Grid container spacing={4} alignItems=\"center\">\n              <Grid item>\n                <label htmlFor=\"upload-photo\">\n                  <input\n                    style={{ display: 'none' }}\n                    id=\"upload-photo\"\n                    name=\"upload-photo\"\n                    accept=\".smc,.sfc\"\n                    type=\"file\"\n                    onChange={changeHandlerAutoDetect}\n                  />\n\n                  <Button color=\"primary\" variant=\"contained\" component=\"span\">\n                    Load Rom\n                </Button>\n                </label>\n\n              </Grid>\n\n              <Grid item>\n                <AlertDialog />\n              </Grid>\n\n              <Grid item>\n                <IconButton onClick={_toggleTheme}>\n                  {theme === \"light\" ? <Brightness7Icon /> : <Brightness4Icon />}\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <br />\n\n      {\n        rom ?\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container justify=\"space-between\" alignItems=\"flex-start\">\n                <Grid item>\n                  <Typography gutterBottom variant=\"h6\">\n                    Rom Info\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <TableContainer component={Paper}>\n                <Table size=\"small\" aria-label=\"collapsible table\">\n                  <TableBody>\n                    <TableRow>\n                      <TableCell component=\"th\" scope=\"row\">{'Filename'}</TableCell>\n                      <TableCell align=\"right\">{romFilename}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell component=\"th\" scope=\"row\">{'Rom Map Type'}</TableCell>\n                      <TableCell align=\"right\">{identifiedRomType}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell component=\"th\" scope=\"row\">{'Rom Size'}</TableCell>\n                      <TableCell align=\"right\">{formatBytes(rom.length)}</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n          </Grid>\n          : null\n      }\n\n      <br />\n\n      {\n        identifiedRomType ?\n          <Paper className={classes.paper}>\n            <>\n              <Grid container justify=\"space-between\" alignItems=\"flex-start\">\n                <Grid item>\n                  <Typography gutterBottom variant=\"h6\">\n                    New Size\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Container>\n                <Grid container spacing={1}>\n\n                  {\n                    romExpansionOptions.map((item, id) => {\n                      return (\n                        <>\n                          {\n                            item.size > rom.length &&\n\n                              (\n                                ((identifiedRomType !== romType.LoROM1 && identifiedRomType !== romType.LoROM2) && item.expansionOption !== expansionOption.ShuffleIfLoROM) ||\n                                ((identifiedRomType === romType.LoROM1 || identifiedRomType === romType.LoROM2))\n                              )\n\n                              ?\n                              <Grid item md={6} xs={12}>\n                                <Tooltip title={item.expansionOption === expansionOption.Mirror ? 'Consider the \"mirror\" option as a last resort method if other options fail.' : ''} placement=\"bottom-start\">\n                                  <FormControlLabel\n                                    control={<Radio color=\"primary\" />}\n                                    checked={radioButtonSelected === `${id}`}\n                                    onChange={e => setRadioButtonSelected(e.target.value)}\n                                    value={id}\n                                    label={createLabel(item)}\n                                  />\n                                </Tooltip>\n                              </Grid>\n                              : null\n                          }\n                        </>\n                      );\n                    })\n                  }\n                </Grid>\n\n                <Grid container direction=\"row-reverse\" justify=\"space-between\" alignItems=\"center\">\n                  <Button disabled={radioButtonSelected === \"\"} color=\"primary\" variant=\"contained\" component=\"span\" onClick={handleClickExpand}>\n                    Expand\n                </Button>\n                </Grid>\n              </Container>\n            </>\n          </Paper>\n          : null\n      }\n    </>\n  );\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setSnackbar } from \"../context/snackbar/snackbar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst CustomizedSnackbars = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const snackbarOpen = useSelector(state => state.snackbar.snackbarOpen);\r\n  const snackbarType = useSelector(state => state.snackbar.snackbarType);\r\n  const snackbarMessage = useSelector(state => state.snackbar.snackbarMessage);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    dispatch(setSnackbar(false, snackbarType, snackbarMessage));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          onClose={handleClose}\r\n          color={snackbarType}\r\n        >\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbars;\r\n","import { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport Layout from \"./_layout\";\nimport { ThemeProvider } from \"./context/theme\";\nimport { Provider } from \"react-redux\";\nimport store from \"./context/snackbar/configureStore\";\n\nimport MainPage from \"./pages/mainPage\";\nimport Snackbar from \"./components/snackbar\";\nfunction App() {\n  return (\n    <>\n      <ThemeProvider>\n        <Provider store={store}>\n          <Layout>\n            <Router>\n              <Switch>\n                <Route path=\"/\">\n                <Snackbar />\n                  <MainPage />\n                </Route>\n                {/* Add more routes here */}\n              </Switch>\n            </Router>\n          </Layout>\n        </Provider>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import App from \"./app\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}